"""Recreate migrations

Revision ID: 1c1081e633e6
Revises: 
Create Date: 2025-03-03 12:26:52.326203

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1c1081e633e6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invite_tokens')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('stock_quantity',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('payment_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.create_unique_constraint(None, ['name'])

    with op.batch_alter_table('stores', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('supply_requests', schema=None) as batch_op:
        batch_op.add_column(sa.Column('approved_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('store_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'stores', ['store_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=256),
               type_=sa.String(length=256),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'stores', ['store_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=128),
               type_=sa.VARCHAR(length=256),
               existing_nullable=False)
        batch_op.drop_column('created_at')

    with op.batch_alter_table('supply_requests', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('store_id')
        batch_op.drop_column('approved_at')

    with op.batch_alter_table('stores', schema=None) as batch_op:
        batch_op.drop_column('created_at')

    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.alter_column('payment_status',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('stock_quantity',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('updated_at')

    op.create_table('invite_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='invite_tokens_pkey'),
    sa.UniqueConstraint('token', name='invite_tokens_token_key')
    )
    # ### end Alembic commands ###
